/*
import React from 'react'
import { observable, action } from 'mobx'
import {observer,inject} from 'mobx-react'
import NoDataView from '../../common/NoDataView'
import LoadingWrapperWithFailure from  '../../common/LoadingWrapperWithFailure'

import Todo from '../Todo'

@inject('todoStore')
@observer
class TodoList extends React.Component{
    
    componentDidMount(){
        this.doNetworkCalls()
    }
    
    doNetworkCalls=()=>{
        this.props.todoStore.getUsersAPI();
    }
    
    renderUsersList=()=>{
        const {todos}=this.props.todoStore;
        if(todos.length==0){
            return <NoDataView/>;
        }
        
        else{
        return todos.map(todo=> (
                   <Todo key={Math.random()} todo={todo}/>
            ));
        }
    }
    
    
    
    render(){
        const {getUsersApiStatus,getUsersApiError}=this.props.todoStore
        return (
        <LoadingWrapperWithFailure
            apiStatus={getUsersApiStatus}
            apiError={getUsersApiError}
            onRetryClick={this.doNetworkCalls}
            renderSuccessUI={this.renderUsersList}
        />)
        
        
        
        
        
        
        const length=todoStore.todos.length
        //console.log(todoStore.todos)
        const Todos=todoStore.todos.map(each=><Todo key={Math.random()} todo={each}/>)
        return(<div>
            {length?<div>{Todos}</div>
                :<div>No data found</div>}
            </div>)
            
    }
}

export default TodoList*/